(function() {var implementors = {};
implementors["halo2"] = [{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"halo2/arithmetic/trait.Field.html\" title=\"trait halo2::arithmetic::Field\">Field</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"enum\" href=\"halo2/plonk/enum.Assigned.html\" title=\"enum halo2::plonk::Assigned\">Assigned</a>&lt;F&gt;&gt; for <a class=\"enum\" href=\"halo2/plonk/enum.Assigned.html\" title=\"enum halo2::plonk::Assigned\">Assigned</a>&lt;F&gt;","synthetic":false,"types":["halo2::plonk::circuit::Assigned"]},{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"halo2/arithmetic/trait.Field.html\" title=\"trait halo2::arithmetic::Field\">Field</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;F&gt; for <a class=\"enum\" href=\"halo2/plonk/enum.Assigned.html\" title=\"enum halo2::plonk::Assigned\">Assigned</a>&lt;F&gt;","synthetic":false,"types":["halo2::plonk::circuit::Assigned"]},{"text":"impl&lt;F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"enum\" href=\"halo2/plonk/enum.Expression.html\" title=\"enum halo2::plonk::Expression\">Expression</a>&lt;F&gt;&gt; for <a class=\"enum\" href=\"halo2/plonk/enum.Expression.html\" title=\"enum halo2::plonk::Expression\">Expression</a>&lt;F&gt;","synthetic":false,"types":["halo2::plonk::circuit::Expression"]},{"text":"impl&lt;F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;F&gt; for <a class=\"enum\" href=\"halo2/plonk/enum.Expression.html\" title=\"enum halo2::plonk::Expression\">Expression</a>&lt;F&gt;","synthetic":false,"types":["halo2::plonk::circuit::Expression"]},{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"halo2/arithmetic/trait.FieldExt.html\" title=\"trait halo2::arithmetic::FieldExt\">FieldExt</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"halo2/poly/commitment/struct.Blind.html\" title=\"struct halo2::poly::commitment::Blind\">Blind</a>&lt;F&gt;&gt; for <a class=\"struct\" href=\"halo2/poly/commitment/struct.Blind.html\" title=\"struct halo2::poly::commitment::Blind\">Blind</a>&lt;F&gt;","synthetic":false,"types":["halo2::poly::commitment::Blind"]},{"text":"impl&lt;'a, F:&nbsp;<a class=\"trait\" href=\"halo2/arithmetic/trait.Field.html\" title=\"trait halo2::arithmetic::Field\">Field</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'a <a class=\"struct\" href=\"halo2/poly/struct.Polynomial.html\" title=\"struct halo2::poly::Polynomial\">Polynomial</a>&lt;F, <a class=\"struct\" href=\"halo2/poly/struct.ExtendedLagrangeCoeff.html\" title=\"struct halo2::poly::ExtendedLagrangeCoeff\">ExtendedLagrangeCoeff</a>&gt;&gt; for <a class=\"struct\" href=\"halo2/poly/struct.Polynomial.html\" title=\"struct halo2::poly::Polynomial\">Polynomial</a>&lt;F, <a class=\"struct\" href=\"halo2/poly/struct.ExtendedLagrangeCoeff.html\" title=\"struct halo2::poly::ExtendedLagrangeCoeff\">ExtendedLagrangeCoeff</a>&gt;","synthetic":false,"types":["halo2::poly::Polynomial"]},{"text":"impl&lt;'a, F:&nbsp;<a class=\"trait\" href=\"halo2/arithmetic/trait.Field.html\" title=\"trait halo2::arithmetic::Field\">Field</a>, B:&nbsp;<a class=\"trait\" href=\"halo2/poly/trait.Basis.html\" title=\"trait halo2::poly::Basis\">Basis</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;F&gt; for <a class=\"struct\" href=\"halo2/poly/struct.Polynomial.html\" title=\"struct halo2::poly::Polynomial\">Polynomial</a>&lt;F, B&gt;","synthetic":false,"types":["halo2::poly::Polynomial"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()